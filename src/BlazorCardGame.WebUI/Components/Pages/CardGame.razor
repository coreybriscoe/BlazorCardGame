@namespace BlazorCardGame.WebUI.Components.Pages
@page "/"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using BlazorCardGame.WebUI.Components.PlayArea
@using BlazorCardGame.WebUI.Components.InfoArea
@using BlazorCardGame.Domain.Models

<PageTitle>Card Game</PageTitle>

<div id="cardgame">
    <InfoAreaComponent />
    <div id="play-area">
        <div class="flex-row flex-center">
            <PoolWithCounter class="raised flex-3" CurrentCount=0 TotalCount=5>
                <CardPoolComponent T=PlayingCard Cards=@(new List<PlayingCard>()) cardsSelectable=false />
            </PoolWithCounter>
            <PoolWithCounter class="raised flex-2" CurrentCount=0 TotalCount=2>
                <CardPoolComponent T=PlayingCard Cards=@(new List<PlayingCard>()) cardsSelectable=false />
            </PoolWithCounter>
        </div>
        <div id="play-discard-row">
            <div class="flex-row flex-center w-3-4">
                @if (isPlayableHand()) {
                    <div class="colorbox blue-bg flex-1" @onclick=PlayHandClicked>Play</div>
                    <div class="colorbox red-bg flex-1" @onclick=DiscardHandClicked>Discard</div>
                } else {
                    <div class="flex-2">Select some cards from your hand.</div>
                }
                <div class="flex-center flex-1">
                    <PoolWithCounter CurrentCount=@deck.Count() TotalCount=@deck.DeckSize()>
                        <DeckComponent DrawAllowed=true />
                    </PoolWithCounter>
                </div>
            </div>
        </div>

        <div>
            <PoolWithCounter class="raised" CurrentCount=@CardsState.Value.HandCards.Count() TotalCount=@handLimit>
                <CardPoolComponent T=BasePlayingCard Cards=@CardsState.Value.HandCards cardsSelectable=true isHand=true/>
            </PoolWithCounter>
        </div>
    </div>
</div>